[
    {
        "check_type": "terraform_plan",
        "results": {
            "failed_checks": []
        },
        "summary": {
            "passed": 0,
            "failed": 0,
            "skipped": 0,
            "parsing_errors": 1,
            "resource_count": 0,
            "checkov_version": "3.2.447"
        }
    },
    {
        "check_type": "dockerfile",
        "results": {
            "failed_checks": [
                {
                    "check_id": "CKV_DOCKER_3",
                    "bc_check_id": "BC_DKR_3",
                    "check_name": "Ensure that a user for the container has been created",
                    "check_result": {
                        "result": "FAILED",
                        "results_configuration": null
                    },
                    "code_block": [
                        [
                            1,
                            "FROM python:3.11\n"
                        ],
                        [
                            2,
                            "\n"
                        ],
                        [
                            3,
                            "WORKDIR /app\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "COPY requirements.txt .\n"
                        ],
                        [
                            6,
                            "\n"
                        ],
                        [
                            7,
                            "RUN pip install --no-cache-dir -r requirements.txt\n"
                        ],
                        [
                            8,
                            "RUN pip install prometheus-fastapi-instrumentator\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "COPY . .\n"
                        ],
                        [
                            11,
                            "\n"
                        ],
                        [
                            12,
                            "CMD [\"uvicorn\", \"main:app\", \"--host\", \"0.0.0.0\", \"--port\", \"8000\"]"
                        ]
                    ],
                    "file_path": "/backend/Dockerfile",
                    "file_abs_path": "/home/ubuntu/sistema-reservas/backend/Dockerfile",
                    "repo_file_path": "/backend/Dockerfile",
                    "file_line_range": [
                        1,
                        12
                    ],
                    "resource": "/backend/Dockerfile.",
                    "evaluations": null,
                    "check_class": "checkov.dockerfile.checks.UserExists",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-that-a-user-for-the-container-has-been-created",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                },
                {
                    "check_id": "CKV_DOCKER_3",
                    "bc_check_id": "BC_DKR_3",
                    "check_name": "Ensure that a user for the container has been created",
                    "check_result": {
                        "result": "FAILED",
                        "results_configuration": null
                    },
                    "code_block": [
                        [
                            1,
                            "import re\n"
                        ],
                        [
                            2,
                            "\n"
                        ],
                        [
                            3,
                            "DOCKERFILE_MASK = re.compile(r\"^(?:.+\\.)?[Dd]ockerfile(?:\\..+)?$(?<!\\.[Dd]ockerignore)\")\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "\n"
                        ],
                        [
                            6,
                            "def is_dockerfile(file: str) -> bool:\n"
                        ],
                        [
                            7,
                            "    if \"ockerfile\" not in file:\n"
                        ],
                        [
                            8,
                            "        # no need to check the full regex, if 'ockerfile' couldn't be found\n"
                        ],
                        [
                            9,
                            "        return False\n"
                        ],
                        [
                            10,
                            "    return re.fullmatch(DOCKERFILE_MASK, file) is not None"
                        ]
                    ],
                    "file_path": "/venv-checkov/lib/python3.12/site-packages/checkov/common/util/dockerfile.py",
                    "file_abs_path": "/home/ubuntu/sistema-reservas/venv-checkov/lib/python3.12/site-packages/checkov/common/util/dockerfile.py",
                    "repo_file_path": "/venv-checkov/lib/python3.12/site-packages/checkov/common/util/dockerfile.py",
                    "file_line_range": [
                        1,
                        10
                    ],
                    "resource": "/venv-checkov/lib/python3.12/site-packages/checkov/common/util/dockerfile.py.",
                    "evaluations": null,
                    "check_class": "checkov.dockerfile.checks.UserExists",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-that-a-user-for-the-container-has-been-created",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null
                }
            ]
        },
        "summary": {
            "passed": 39,
            "failed": 2,
            "skipped": 0,
            "parsing_errors": 0,
            "resource_count": 2,
            "checkov_version": "3.2.447"
        }
    },
    {
        "check_type": "github_actions",
        "results": {
            "failed_checks": [
                {
                    "check_id": "CKV2_GHA_1",
                    "bc_check_id": null,
                    "check_name": "Ensure top-level permissions are not set to write-all",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "permissions"
                        ]
                    },
                    "code_block": [],
                    "file_path": "/.github/workflows/ci.yml",
                    "file_abs_path": "/home/ubuntu/sistema-reservas/.github/workflows/ci.yml",
                    "repo_file_path": "/.github/workflows/ci.yml",
                    "file_line_range": [
                        0,
                        1
                    ],
                    "resource": "on(CI Pipeline)",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null,
                    "triggers": [
                        [
                            "push",
                            "pull_request"
                        ]
                    ],
                    "job": [
                        ""
                    ],
                    "workflow_name": "CI Pipeline"
                },
                {
                    "check_id": "CKV2_GHA_1",
                    "bc_check_id": null,
                    "check_name": "Ensure top-level permissions are not set to write-all",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "permissions"
                        ]
                    },
                    "code_block": [],
                    "file_path": "/.github/workflows/blank.yml",
                    "file_abs_path": "/home/ubuntu/sistema-reservas/.github/workflows/blank.yml",
                    "repo_file_path": "/.github/workflows/blank.yml",
                    "file_line_range": [
                        0,
                        1
                    ],
                    "resource": "on(Backend CI)",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": null,
                    "triggers": [
                        [
                            "push",
                            "pull_request"
                        ]
                    ],
                    "job": [
                        ""
                    ],
                    "workflow_name": "Backend CI"
                }
            ]
        },
        "summary": {
            "passed": 106,
            "failed": 2,
            "skipped": 0,
            "parsing_errors": 0,
            "resource_count": 0,
            "checkov_version": "3.2.447"
        }
    }
]
